from aiogram import types
from database_func.user_to_database import user_to_database
from configparser import ConfigParser

config = ConfigParser()
config.read('secret_data/config.ini')

creator_id = config['Telegram']['creator_id']


async def start_rout(message: types.Message) -> None:

    user_id: int = message.from_user.id

    case1 = user_id == creator_id
    case2 = user_id != creator_id

    creator_case = case1 and not case2
    user_case = case2 and not case1

    if creator_case:

        await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –°–æ–∑–¥–∞—Ç–µ–ª—å\n\n"
                             f"–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è? üí≠"
                             f"\n\n–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ <b><i>/help</i></b> üëà\n\n"
                             f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ <b><i>/search</i></b>üëà\n\n"
                             f"----------–ö–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞—Ç–µ–ª—èüëá----------\n\n"
                             f"–ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ - <b><i>/get_logs</i></b> üëà"
                             f"\n\n\n<b><i>made by you ü´µ</i></b>")

    elif user_case:

        await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —è <b>ReAssembler</b>ü§ñ\n\n–ë–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
                             f" –∏–∑ —á–∞—Ç–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤ –≤ <b><i>Telegram</i></b> üí≠"
                             f"\n\n–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ <b><i>/help</i></b> üëà\n\n"
                             f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ <b><i>/search</i></b>üëà"
                             f"\n\n\n<b><i>made by <a href='https://t.me/kolo_id'>kolo</a></i></b>",
                             disable_web_page_preview=True)

    await user_to_database(message)
